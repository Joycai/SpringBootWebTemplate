plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group 'cn.joycai.demo'
version '1.3-SNAPSHOT'

java{
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
    maven {
        url "https://repo.huaweicloud.com/repository/maven/"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation "org.slf4j:slf4j-api:1.7.+"
    implementation "ch.qos.logback:logback-classic:1.2.+"

    implementation "org.redisson:redisson:3+"
    implementation "com.google.guava:guava:29.0-jre"

    runtimeOnly ("org.postgresql:postgresql") {
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

test {
    useJUnitPlatform()
}

tasks.register("createDirs"){
    group "help"
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}